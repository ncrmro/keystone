{
  config,
  pkgs,
  lib,
  ...
}: {
  # Minimal Keystone server configuration for VM testing
  # This configuration enables nixos-anywhere deployment to VMs

  # System identity
  networking.hostName = "keystone-test-vm";
  # Required for ZFS - unique 8-character hex string
  # Generate with: head -c 4 /dev/urandom | od -A none -t x4 | tr -d ' '
  networking.hostId = "deadbeef";

  # Boot loader configuration
  # Use systemd-boot for UEFI systems
  boot.loader.systemd-boot.enable = true;
  boot.loader.efi.canTouchEfiVariables = true;

  # Enable Keystone modules
  keystone = {
    # Disk configuration with ZFS and encryption
    disko = {
      enable = true;
      # Disk device for VM testing
      # Note: VMs use /dev/vda - disk-by-id serial doesn't work reliably with quickemu
      device = "/dev/vda";

      # Swap size (default: 8G)
      # Adjust based on disk size: 20GB VM = 8G, larger systems = 16G or 64G
      # swapSize = "16G";
    };

    # SSH-based remote disk unlocking for VMs
    # The host key is automatically generated by bin/test-deployment
    # and copied to /etc/ssh/initrd_ssh_host_ed25519_key via --extra-files
    initrdSshUnlock = {
      enable = true;
      # hostKey defaults to /etc/ssh/initrd_ssh_host_ed25519_key
      authorizedKeys = [
        "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOyrDBVcGK+pUZOTUA7MLoD5vYK/kaPF6TNNyoDmwNl2 ncrmro@ncrmro-laptop-fw7k"
      ];
      networkModule = "virtio_net"; # For QEMU/KVM VMs
    };

    # Server services (SSH, mDNS, firewall, etc.)
    server.enable = true;
  };

  # Serial console support for VM testing
  # Enables console output via serial port (useful for password prompts in initrd)
  boot.kernelParams = [
    "console=ttyS0,115200n8" # Serial console
    "console=tty0" # Keep VGA console as fallback
  ];

  # Enable serial console in systemd (for initrd password prompts)
  boot.initrd.systemd.emergencyAccess = true; # Allow emergency access via serial

  # Ensure virtio modules are available in initrd (required for QEMU/KVM VMs)
  boot.initrd.availableKernelModules = ["virtio_blk" "virtio_pci" "virtio_net"];

  # SSH access configuration
  # IMPORTANT: Replace with your actual SSH public key(s)
  # You can get your public key with: cat ~/.ssh/id_ed25519.pub
  users.users.root.openssh.authorizedKeys.keys = [
    "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOyrDBVcGK+pUZOTUA7MLoD5vYK/kaPF6TNNyoDmwNl2 ncrmro@ncrmro-laptop-fw7k"
  ];

  # Optional: Set timezone (default: UTC from server module)
  # time.timeZone = "America/New_York";

  # Optional: Additional packages
  # environment.systemPackages = with pkgs; [
  #   neovim
  # ];
}
